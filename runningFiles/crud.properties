# Options: direct - actions - time - mixed
## direct: Will run CRUD in a random order exactly the amount of actions per type specified and then return
## actions: Will use CRUD as a template to run ACTIONS amount of times and then stop
## time: Will use TIME to run the CRUD as a template for the TIME number of seconds and then stop
## mixed: Will use both ACTIONS and TIME, and stop whenever any one of those apply (stop by TIME or number of ACTIONS) and stop
STRATEGY=time

# ASYNC defines wheather to Run SYNC or ASYNC
## If false, then SYNC and there is success validation with each query
## If true, then no validation is present (performance testing focus)
ASYNC=true

# C R U D amount defined
# Recommended percentage is: C:5%, R:60%, U:33%, D:2%
# Strategy Will define how it will be used (Read Strategy above)
CREATE=2
READ=5
UPDATE=2
DELETE=2

# Number of times the CRUD template will be run
ACTIONS=120
# Number of seconds the CRUD template will be run
TIME=10

# Defines the Serialization / Deserialization method to be used on the Test
# Options: java, json (default), xml, thrift, protobuf, abro
SERIALIZATION=json

#Server Host
HOST=sample.host.com

#ID_FROM and ID_TO to distribute creation of entries and validate Distributed Caching
ID_FROM=0
ID_TO=25

#Random SEEDS define Deterministic Tests, changing and repeating all tests bring more accurate Stats
ACCESS_RANDOM_SEED=123
ACTIONS_RANDOM_SEED=111

# Deterministic Test prevents race issues and will always return the same result, but it's no Realistic
# TRUE makes the CRUD actions only affect the ID_FROM to ID_TO range of IDs
# FALSE makes the CRUD actions alter all available IDs
DETERMINISTIC=false

# DEBUG true will show the detail on each action taken
DEBUG=false
